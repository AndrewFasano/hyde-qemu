Syscall introspection on kvm


Syscall instruction uses MSR LSTAR to know where to jump to

MSRs are accessible from both host and guest - so let's write to it *after* the guest sets it up
  We see a call to kvm_buf_set_msrs on loadvm which changes lstar to fffffe0000006000 (entry_SYSCALL_64_trampoline)

  We also see kvm_put_msrs a bunch during boot - seems like we can mess with env->lstar and cause changes in guest behavior

  Value is a 64 bit long, but we have to set the first 6(?) bytes to F


KVM based syscall interception paper:
Nitro: Hardware-based System Call Tracing for Virtual Machines by J Pfoh


Blog post with the LSTAR based idea:
  http://hypervsir.blogspot.com/2014/10/yet-another-solution-to-monitortrap.html


Building KVM from source
cd ~/git/linux
git checkout v5.4
cp /boot/config-$(uname -r) .
make olddefconfig
make modules_prepare



--------

Running a kvm guest with -M pc-i440fx-2.8, we can now do 'begin_record name' and dump a -rr-snp file that PANDA can load! Wahoo! - Ignoring the `kvmclock` memory region (should we?)
